{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 31,
    "pending": 0,
    "failures": 10,
    "start": "2022-08-03T13:30:44.066Z",
    "end": "2022-08-03T13:31:43.817Z",
    "duration": 59751,
    "testsRegistered": 41,
    "passPercent": 75.60975609756098,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3068dd22-9cb4-490b-9477-e72b000953e3",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "10a15ec6-882e-4a73-b672-868f5b6e97d0",
          "title": "1 - Adicione à página o título \"Paleta de Cores\"",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\" Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 241,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "165f84ac-e375-47cf-be46-4f5d12dc236b",
              "parentUUID": "10a15ec6-882e-4a73-b672-868f5b6e97d0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "165f84ac-e375-47cf-be46-4f5d12dc236b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 241,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4b876a05-0ce6-4138-bb2d-64205d5e6741",
          "title": "2 - Adicione à página uma paleta contendo quatro cores distintas",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "19bbb67d-8bb3-49ef-8b90-63a30e1629db",
              "parentUUID": "4b876a05-0ce6-4138-bb2d-64205d5e6741",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "b046763d-6fd8-42a2-af3f-f94bc2639ea1",
              "parentUUID": "4b876a05-0ce6-4138-bb2d-64205d5e6741",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "2739c156-95a8-49f4-8640-b0b31d7afbab",
              "parentUUID": "4b876a05-0ce6-4138-bb2d-64205d5e6741",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "74cd9fe5-2fd7-4a4b-9521-4a3877035c78",
              "parentUUID": "4b876a05-0ce6-4138-bb2d-64205d5e6741",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "754f09dc-a701-41b5-98c0-5b9c0212978e",
              "parentUUID": "4b876a05-0ce6-4138-bb2d-64205d5e6741",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "bb8f2e37-808b-4736-b1d0-3c1b1947c31a",
              "parentUUID": "4b876a05-0ce6-4138-bb2d-64205d5e6741",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "31f42e34-e14b-4adb-b10a-474ddafbff02",
              "parentUUID": "4b876a05-0ce6-4138-bb2d-64205d5e6741",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "19bbb67d-8bb3-49ef-8b90-63a30e1629db",
            "b046763d-6fd8-42a2-af3f-f94bc2639ea1",
            "2739c156-95a8-49f4-8640-b0b31d7afbab",
            "74cd9fe5-2fd7-4a4b-9521-4a3877035c78",
            "754f09dc-a701-41b5-98c0-5b9c0212978e",
            "bb8f2e37-808b-4736-b1d0-3c1b1947c31a",
            "31f42e34-e14b-4adb-b10a-474ddafbff02"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 740,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fcc9395c-f476-4cad-a8b5-32f84d5cf59a",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 72,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "40369737-9fa4-4c9d-baa8-6b7869601278",
              "parentUUID": "fcc9395c-f476-4cad-a8b5-32f84d5cf59a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "ace965a2-f9eb-474d-94c6-4d5c9055a91e",
              "parentUUID": "fcc9395c-f476-4cad-a8b5-32f84d5cf59a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "40369737-9fa4-4c9d-baa8-6b7869601278",
            "ace965a2-f9eb-474d-94c6-4d5c9055a91e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 219,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "23607bc9-dcc9-4ee0-8b06-edabf160ce7d",
          "title": "4 - Adicione à página um quadro contendo 25 pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro contendo 25 pixels Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 75,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "9e2e4bf8-a962-46c5-ae74-9c43f2cf8ad7",
              "parentUUID": "23607bc9-dcc9-4ee0-8b06-edabf160ce7d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro contendo 25 pixels Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "174659b3-9799-410b-b4c7-b89d5c726719",
              "parentUUID": "23607bc9-dcc9-4ee0-8b06-edabf160ce7d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro contendo 25 pixels Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "e439a2db-38e1-4505-8493-d8490ad2a5bc",
              "parentUUID": "23607bc9-dcc9-4ee0-8b06-edabf160ce7d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro contendo 25 pixels Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 73,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "31d244c4-82d5-4472-86d9-749b3dc84e55",
              "parentUUID": "23607bc9-dcc9-4ee0-8b06-edabf160ce7d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9e2e4bf8-a962-46c5-ae74-9c43f2cf8ad7",
            "174659b3-9799-410b-b4c7-b89d5c726719",
            "e439a2db-38e1-4505-8493-d8490ad2a5bc",
            "31d244c4-82d5-4472-86d9-749b3dc84e55"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 365,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c3281817-e42e-478b-a1ad-6715f2a931c2",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "4b9b1e61-4d85-42ed-9fcd-a9ee8d2b61cf",
              "parentUUID": "c3281817-e42e-478b-a1ad-6715f2a931c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 294,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "049d571f-b427-4759-8feb-bbcbd065fab7",
              "parentUUID": "c3281817-e42e-478b-a1ad-6715f2a931c2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4b9b1e61-4d85-42ed-9fcd-a9ee8d2b61cf",
            "049d571f-b427-4759-8feb-bbcbd065fab7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 564,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0d1533f3-b6c8-45e3-9d7e-8493519c60f3",
          "title": "6 - Defina a cor preta como cor inicial da paleta de cores. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial da paleta de cores. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "4ef1a897-cef1-4c32-b4c0-a69bff946a80",
              "parentUUID": "0d1533f3-b6c8-45e3-9d7e-8493519c60f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial da paleta de cores. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 83,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "73962a61-4a08-48d0-b8de-36ebb2219e85",
              "parentUUID": "0d1533f3-b6c8-45e3-9d7e-8493519c60f3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4ef1a897-cef1-4c32-b4c0-a69bff946a80",
            "73962a61-4a08-48d0-b8de-36ebb2219e85"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 180,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4775c7fc-ca05-4fac-82cf-6f008fff4daf",
          "title": "7 - Crie uma função para selecionar uma cor na paleta de cores e preencher os pixels no quadro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Crie uma função para selecionar uma cor na paleta de cores e preencher os pixels no quadro Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 434,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "8eb116e2-0c9e-4d4c-874a-797986a7abcc",
              "parentUUID": "4775c7fc-ca05-4fac-82cf-6f008fff4daf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Crie uma função para selecionar uma cor na paleta de cores e preencher os pixels no quadro Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "10c89b56-8a6f-4732-ab9d-3da476a3cac9",
              "parentUUID": "4775c7fc-ca05-4fac-82cf-6f008fff4daf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8eb116e2-0c9e-4d4c-874a-797986a7abcc",
            "10c89b56-8a6f-4732-ab9d-3da476a3cac9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8543,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "99bd3c53-154e-4309-9aa3-84a1a5c3f599",
          "title": "8 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2096,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "10cd017a-ff1e-447a-bb29-877574eb65f3",
              "parentUUID": "99bd3c53-154e-4309-9aa3-84a1a5c3f599",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8077,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "98bd4f89-d2b3-48f1-a1e8-947e5f1a0bb1",
              "parentUUID": "99bd3c53-154e-4309-9aa3-84a1a5c3f599",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1183,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "e4fb17a1-90e4-4a13-b957-686b5b5aec32",
              "parentUUID": "99bd3c53-154e-4309-9aa3-84a1a5c3f599",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "10cd017a-ff1e-447a-bb29-877574eb65f3",
            "98bd4f89-d2b3-48f1-a1e8-947e5f1a0bb1",
            "e4fb17a1-90e4-4a13-b957-686b5b5aec32"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11356,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0a387912-86ad-4349-b61b-98d2e0c34950",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "03e35c53-2449-4965-b634-bdec85305df0",
              "parentUUID": "0a387912-86ad-4349-b61b-98d2e0c34950",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "efa23eb8-b78d-48f3-8677-d4af7dde63f3",
              "parentUUID": "0a387912-86ad-4349-b61b-98d2e0c34950",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 4345,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<button#clear-board>' to contain text 'Limpar', but the text was 'Recomeçar'",
                "estack": "CypressError: Timed out retrying: expected '<button#clear-board>' to contain text 'Limpar', but the text was 'Recomeçar'\n    at cypressErr (http://localhost:56529/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:56529/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:56529/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:56529/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:56529/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:56529/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:56529/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:56529/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:56529/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:56529/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:56529/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:56529/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:56529/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "22afe481-ef89-4aec-8c77-edc0ae37a5c9",
              "parentUUID": "0a387912-86ad-4349-b61b-98d2e0c34950",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 6467,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<div.pixel.border>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgb(128, 0, 128)'",
                "estack": "CypressError: Timed out retrying: expected '<div.pixel.border>' to have CSS property 'background-color' with the value 'rgb(255, 255, 255)', but the value was 'rgb(128, 0, 128)'\n    at cypressErr (http://localhost:56529/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:56529/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:56529/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:56529/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:56529/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:56529/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:56529/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:56529/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:56529/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:56529/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:56529/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:56529/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:56529/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ffe36d98-0c9f-4e34-bb7f-da70e7d7b338",
              "parentUUID": "0a387912-86ad-4349-b61b-98d2e0c34950",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "03e35c53-2449-4965-b634-bdec85305df0",
            "efa23eb8-b78d-48f3-8677-d4af7dde63f3"
          ],
          "failures": [
            "22afe481-ef89-4aec-8c77-edc0ae37a5c9",
            "ffe36d98-0c9f-4e34-bb7f-da70e7d7b338"
          ],
          "pending": [],
          "skipped": [],
          "duration": 11051,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8fe49698-ec15-4736-b919-8917c1a470f8",
          "title": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "4283a60b-1936-458c-a8cb-a6a9dcced956",
              "parentUUID": "8fe49698-ec15-4736-b919-8917c1a470f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "260fe3f0-f836-4c11-b97a-ee3e9eeb39aa",
              "parentUUID": "8fe49698-ec15-4736-b919-8917c1a470f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 66,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {},
              "uuid": "a3e1311b-996d-4252-a6b8-390a85df4ab4",
              "parentUUID": "8fe49698-ec15-4736-b919-8917c1a470f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4413,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find content: '/vqv/i' within the element: <button#generate-board> but never did.",
                "estack": "CypressError: Timed out retrying: Expected to find content: '/vqv/i' within the element: <button#generate-board> but never did.\n    at cypressErr (http://localhost:56529/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:56529/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:56529/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:56529/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:56529/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:56529/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:56529/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:56529/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:56529/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:56529/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:56529/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:56529/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:56529/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c0ea119c-a950-4482-87d1-f5e6cec31239",
              "parentUUID": "8fe49698-ec15-4736-b919-8917c1a470f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "072fddbc-bc07-4337-9f6a-3cb01372d5d4",
              "parentUUID": "8fe49698-ec15-4736-b919-8917c1a470f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 89,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "51b67090-4ed4-4be6-b60c-759c547fcb01",
              "parentUUID": "8fe49698-ec15-4736-b919-8917c1a470f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 452,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:56529/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:56529/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:56529/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:56529/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:56529/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:56529/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:56529/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:56529/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:56529/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:56529/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:56529/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:56529/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:56529/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:56529/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2561d657-fd62-48a5-b318-6bdba4624b97",
              "parentUUID": "8fe49698-ec15-4736-b919-8917c1a470f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4726,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.\n    at cypressErr (http://localhost:56529/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:56529/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:56529/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:56529/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:56529/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:56529/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:56529/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:56529/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:56529/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:56529/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:56529/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:56529/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:56529/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "494ec164-bf3a-42d5-a152-8cb0b53d1748",
              "parentUUID": "8fe49698-ec15-4736-b919-8917c1a470f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4747,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.\n    at cypressErr (http://localhost:56529/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:56529/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:56529/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:56529/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:56529/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:56529/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:56529/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:56529/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:56529/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:56529/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:56529/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:56529/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:56529/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a46911cd-1226-4e85-b58c-4c6541fd4a8e",
              "parentUUID": "8fe49698-ec15-4736-b919-8917c1a470f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4283a60b-1936-458c-a8cb-a6a9dcced956",
            "260fe3f0-f836-4c11-b97a-ee3e9eeb39aa",
            "a3e1311b-996d-4252-a6b8-390a85df4ab4",
            "072fddbc-bc07-4337-9f6a-3cb01372d5d4",
            "51b67090-4ed4-4be6-b60c-759c547fcb01"
          ],
          "failures": [
            "c0ea119c-a950-4482-87d1-f5e6cec31239",
            "2561d657-fd62-48a5-b318-6bdba4624b97",
            "494ec164-bf3a-42d5-a152-8cb0b53d1748",
            "a46911cd-1226-4e85-b58c-4c6541fd4a8e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14857,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3b07cbf3-fd4a-4a5b-92cf-6ab085189dbc",
          "title": "11 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4792,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:56529/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:56529/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:56529/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:56529/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:56529/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:56529/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:56529/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:56529/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:56529/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:56529/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:56529/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:56529/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:56529/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1c9656ba-f790-4fe0-97e9-231cc7d7fa52",
              "parentUUID": "3b07cbf3-fd4a-4a5b-92cf-6ab085189dbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 441,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "25ab3423-5e75-4011-abdb-283ce263a8db",
              "parentUUID": "3b07cbf3-fd4a-4a5b-92cf-6ab085189dbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4696,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:56529/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:56529/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:56529/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:56529/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:56529/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:56529/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:56529/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:56529/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:56529/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:56529/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:56529/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:56529/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:56529/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0a4ff3fd-1371-4b08-b3ea-4d06aebb694e",
              "parentUUID": "3b07cbf3-fd4a-4a5b-92cf-6ab085189dbc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "25ab3423-5e75-4011-abdb-283ce263a8db"
          ],
          "failures": [
            "1c9656ba-f790-4fe0-97e9-231cc7d7fa52",
            "0a4ff3fd-1371-4b08-b3ea-4d06aebb694e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9929,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9f1b2f36-878c-4cc7-81da-386017b2bcef",
          "title": "12 - Crie uma função para gerar as cores aleatoriamente ao carregar a página, com exceção da cor preta",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Crie uma função para gerar as cores aleatoriamente ao carregar a página, com exceção da cor preta Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 479,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:56529/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:56529/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:56529/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:56529/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:56529/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:56529/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:56529/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:56529/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:56529/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:56529/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:56529/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:56529/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:56529/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:56529/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "dc15e531-05fc-4517-bed9-a96ec7cf7ef3",
              "parentUUID": "9f1b2f36-878c-4cc7-81da-386017b2bcef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Crie uma função para gerar as cores aleatoriamente ao carregar a página, com exceção da cor preta Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 399,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:56529/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:56529/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:56529/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:56529/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:56529/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:56529/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:56529/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:56529/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:56529/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:56529/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:56529/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:56529/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:56529/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:56529/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "2abad525-9852-454f-9d29-9c08c30cff66",
              "parentUUID": "9f1b2f36-878c-4cc7-81da-386017b2bcef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "dc15e531-05fc-4517-bed9-a96ec7cf7ef3",
            "2abad525-9852-454f-9d29-9c08c30cff66"
          ],
          "pending": [],
          "skipped": [],
          "duration": 878,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}
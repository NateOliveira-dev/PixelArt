{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 33,
    "pending": 0,
    "failures": 8,
    "start": "2022-08-03T13:42:31.822Z",
    "end": "2022-08-03T13:43:22.415Z",
    "duration": 50593,
    "testsRegistered": 41,
    "passPercent": 80.48780487804879,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1edd3d5b-c00b-4ddd-a96d-8bb42a6a3c88",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "248d97a7-2620-493c-b616-83e8c66172d1",
          "title": "1 - Adicione à página o título \"Paleta de Cores\"",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\" Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 226,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "edaeb160-d5a5-4666-863f-faac15b9a378",
              "parentUUID": "248d97a7-2620-493c-b616-83e8c66172d1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "edaeb160-d5a5-4666-863f-faac15b9a378"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 226,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5c2ad714-2042-41a4-9cc3-c592bcf4c64d",
          "title": "2 - Adicione à página uma paleta contendo quatro cores distintas",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 77,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "1bf8efc7-ecf0-4ce0-9a09-e7454bb6e8be",
              "parentUUID": "5c2ad714-2042-41a4-9cc3-c592bcf4c64d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "d1940ac9-cc55-437a-bf4b-3b0ea7356c0d",
              "parentUUID": "5c2ad714-2042-41a4-9cc3-c592bcf4c64d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "0c251015-4993-4c3c-9227-01b072f7a6ba",
              "parentUUID": "5c2ad714-2042-41a4-9cc3-c592bcf4c64d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "8eab7d30-0bb1-4e64-a438-f8c8c3d3f997",
              "parentUUID": "5c2ad714-2042-41a4-9cc3-c592bcf4c64d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "e1804488-55c0-4013-870d-a40754fcfc69",
              "parentUUID": "5c2ad714-2042-41a4-9cc3-c592bcf4c64d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "4838eb9a-7a1d-4970-99f5-261424c48853",
              "parentUUID": "5c2ad714-2042-41a4-9cc3-c592bcf4c64d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "cfc3b6ae-f626-45a5-8243-91dce8d72d4f",
              "parentUUID": "5c2ad714-2042-41a4-9cc3-c592bcf4c64d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1bf8efc7-ecf0-4ce0-9a09-e7454bb6e8be",
            "d1940ac9-cc55-437a-bf4b-3b0ea7356c0d",
            "0c251015-4993-4c3c-9227-01b072f7a6ba",
            "8eab7d30-0bb1-4e64-a438-f8c8c3d3f997",
            "e1804488-55c0-4013-870d-a40754fcfc69",
            "4838eb9a-7a1d-4970-99f5-261424c48853",
            "cfc3b6ae-f626-45a5-8243-91dce8d72d4f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 638,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4eb95867-8e63-49ac-b5c7-4c55060b1481",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 86,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "54020a48-5c7d-4c55-8c11-5ef6b4a8004a",
              "parentUUID": "4eb95867-8e63-49ac-b5c7-4c55060b1481",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "c551ed39-74df-43be-b942-701b69d2cda9",
              "parentUUID": "4eb95867-8e63-49ac-b5c7-4c55060b1481",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "54020a48-5c7d-4c55-8c11-5ef6b4a8004a",
            "c551ed39-74df-43be-b942-701b69d2cda9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 219,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0f787cba-7cd7-4bb4-af0b-6802a6f46a10",
          "title": "4 - Adicione à página um quadro contendo 25 pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro contendo 25 pixels Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "680340f6-2c32-41db-a4f8-de793afee4e8",
              "parentUUID": "0f787cba-7cd7-4bb4-af0b-6802a6f46a10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro contendo 25 pixels Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "7171587a-8263-4ad9-8174-aa08abb2c33d",
              "parentUUID": "0f787cba-7cd7-4bb4-af0b-6802a6f46a10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro contendo 25 pixels Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "cc677891-d972-4d40-b954-4de0c7dc2995",
              "parentUUID": "0f787cba-7cd7-4bb4-af0b-6802a6f46a10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro contendo 25 pixels Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 74,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "1d5152f9-df12-4df5-8b68-150b82862a7b",
              "parentUUID": "0f787cba-7cd7-4bb4-af0b-6802a6f46a10",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "680340f6-2c32-41db-a4f8-de793afee4e8",
            "7171587a-8263-4ad9-8174-aa08abb2c33d",
            "cc677891-d972-4d40-b954-4de0c7dc2995",
            "1d5152f9-df12-4df5-8b68-150b82862a7b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 383,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bab331ed-9f5f-4212-9bfa-9ad55f892acb",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 255,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "32ec0328-3de9-450a-a768-d882db00b95b",
              "parentUUID": "bab331ed-9f5f-4212-9bfa-9ad55f892acb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 245,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "4d19cb34-22d6-4de8-8980-cbacf250b702",
              "parentUUID": "bab331ed-9f5f-4212-9bfa-9ad55f892acb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "32ec0328-3de9-450a-a768-d882db00b95b",
            "4d19cb34-22d6-4de8-8980-cbacf250b702"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 500,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fd52c784-3c75-42d8-b403-c4b7655502c7",
          "title": "6 - Defina a cor preta como cor inicial da paleta de cores. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial da paleta de cores. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "041b0611-ab85-4c37-b908-a524c57c73d8",
              "parentUUID": "fd52c784-3c75-42d8-b403-c4b7655502c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial da paleta de cores. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 89,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "bf4652ad-ee98-48e9-a1ce-ba0a7435288d",
              "parentUUID": "fd52c784-3c75-42d8-b403-c4b7655502c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "041b0611-ab85-4c37-b908-a524c57c73d8",
            "bf4652ad-ee98-48e9-a1ce-ba0a7435288d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 170,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "64c0b7a3-1a6c-44af-92c3-6d2929811b38",
          "title": "7 - Crie uma função para selecionar uma cor na paleta de cores e preencher os pixels no quadro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Crie uma função para selecionar uma cor na paleta de cores e preencher os pixels no quadro Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 443,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "cf446049-d2dc-48c9-bf2a-3ea5f41018f0",
              "parentUUID": "64c0b7a3-1a6c-44af-92c3-6d2929811b38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Crie uma função para selecionar uma cor na paleta de cores e preencher os pixels no quadro Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "a58c3853-9602-49c7-842b-7e25c3e0eb38",
              "parentUUID": "64c0b7a3-1a6c-44af-92c3-6d2929811b38",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cf446049-d2dc-48c9-bf2a-3ea5f41018f0",
            "a58c3853-9602-49c7-842b-7e25c3e0eb38"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8569,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d48a5d90-f3dd-4567-9529-b47586ef547f",
          "title": "8 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2078,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "4abe2a5e-9041-4a53-9a77-9307802e4a69",
              "parentUUID": "d48a5d90-f3dd-4567-9529-b47586ef547f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "b2829074-4e78-49d2-9cac-54a509047afb",
              "parentUUID": "d48a5d90-f3dd-4567-9529-b47586ef547f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "308fff3c-d292-4672-91e1-595820f767ba",
              "parentUUID": "d48a5d90-f3dd-4567-9529-b47586ef547f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4abe2a5e-9041-4a53-9a77-9307802e4a69",
            "b2829074-4e78-49d2-9cac-54a509047afb",
            "308fff3c-d292-4672-91e1-595820f767ba"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11385,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "19bac951-173c-4812-9479-d690d6b991e3",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "0bbf482d-c24e-4883-9942-fad5c1399593",
              "parentUUID": "19bac951-173c-4812-9479-d690d6b991e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "61be687a-f182-47cf-a46e-a80344319be7",
              "parentUUID": "19bac951-173c-4812-9479-d690d6b991e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 77,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "566d757e-4c73-40a1-a257-86781892a8b1",
              "parentUUID": "19bac951-173c-4812-9479-d690d6b991e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2153,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "c2ceb079-77ec-4482-901f-928a28828ddd",
              "parentUUID": "19bac951-173c-4812-9479-d690d6b991e3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0bbf482d-c24e-4883-9942-fad5c1399593",
            "61be687a-f182-47cf-a46e-a80344319be7",
            "566d757e-4c73-40a1-a257-86781892a8b1",
            "c2ceb079-77ec-4482-901f-928a28828ddd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2441,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c6e8d0e5-2061-4a07-bf3c-2b3467c14a39",
          "title": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "3a79569a-b38e-4353-bc1a-66066a877e62",
              "parentUUID": "c6e8d0e5-2061-4a07-bf3c-2b3467c14a39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 44,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "5f425cd4-be89-453c-9f3e-b5d553886fac",
              "parentUUID": "c6e8d0e5-2061-4a07-bf3c-2b3467c14a39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 66,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {},
              "uuid": "7771e610-fe18-439a-af88-d00a3506a9bd",
              "parentUUID": "c6e8d0e5-2061-4a07-bf3c-2b3467c14a39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4339,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find content: '/vqv/i' within the element: <button#generate-board> but never did.",
                "estack": "CypressError: Timed out retrying: Expected to find content: '/vqv/i' within the element: <button#generate-board> but never did.\n    at cypressErr (http://localhost:56751/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:56751/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:56751/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:56751/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:56751/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:56751/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:56751/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:56751/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:56751/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:56751/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:56751/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:56751/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:56751/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1353b855-fca1-4123-900c-200db5ed228d",
              "parentUUID": "c6e8d0e5-2061-4a07-bf3c-2b3467c14a39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "990ba6d8-dd94-4b28-a8de-d574d5ee644d",
              "parentUUID": "c6e8d0e5-2061-4a07-bf3c-2b3467c14a39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 73,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "be30ac15-8385-4318-8170-f2f980e52bae",
              "parentUUID": "c6e8d0e5-2061-4a07-bf3c-2b3467c14a39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 380,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:56751/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:56751/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:56751/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:56751/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:56751/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:56751/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:56751/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:56751/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:56751/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:56751/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:56751/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:56751/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:56751/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:56751/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "21583dde-9767-45b7-951d-6a73065d9c94",
              "parentUUID": "c6e8d0e5-2061-4a07-bf3c-2b3467c14a39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4740,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.\n    at cypressErr (http://localhost:56751/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:56751/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:56751/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:56751/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:56751/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:56751/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:56751/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:56751/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:56751/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:56751/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:56751/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:56751/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:56751/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f13d14df-51f0-41b6-801c-739958e98d20",
              "parentUUID": "c6e8d0e5-2061-4a07-bf3c-2b3467c14a39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4701,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.\n    at cypressErr (http://localhost:56751/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:56751/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:56751/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:56751/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:56751/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:56751/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:56751/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:56751/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:56751/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:56751/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:56751/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:56751/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:56751/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2d9b249a-2cf3-4c36-a19f-915808a559f8",
              "parentUUID": "c6e8d0e5-2061-4a07-bf3c-2b3467c14a39",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3a79569a-b38e-4353-bc1a-66066a877e62",
            "5f425cd4-be89-453c-9f3e-b5d553886fac",
            "7771e610-fe18-439a-af88-d00a3506a9bd",
            "990ba6d8-dd94-4b28-a8de-d574d5ee644d",
            "be30ac15-8385-4318-8170-f2f980e52bae"
          ],
          "failures": [
            "1353b855-fca1-4123-900c-200db5ed228d",
            "21583dde-9767-45b7-951d-6a73065d9c94",
            "f13d14df-51f0-41b6-801c-739958e98d20",
            "2d9b249a-2cf3-4c36-a19f-915808a559f8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14589,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8f9de027-b59c-4c07-a14e-9372d7df2793",
          "title": "11 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4705,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:56751/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:56751/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:56751/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:56751/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:56751/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:56751/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:56751/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:56751/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:56751/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:56751/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:56751/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:56751/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:56751/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0d0c205a-9c32-492f-9425-3d8c9ce0fb69",
              "parentUUID": "8f9de027-b59c-4c07-a14e-9372d7df2793",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 464,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "53d37cf9-e11c-4657-b05e-323e0b775d16",
              "parentUUID": "8f9de027-b59c-4c07-a14e-9372d7df2793",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4715,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:56751/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:56751/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:56751/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:56751/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:56751/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:56751/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:56751/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:56751/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:56751/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:56751/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:56751/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:56751/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:56751/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e69ddb45-2842-400c-96c2-deec9a794463",
              "parentUUID": "8f9de027-b59c-4c07-a14e-9372d7df2793",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "53d37cf9-e11c-4657-b05e-323e0b775d16"
          ],
          "failures": [
            "0d0c205a-9c32-492f-9425-3d8c9ce0fb69",
            "e69ddb45-2842-400c-96c2-deec9a794463"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9884,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2ff1cfa0-19e2-4f99-8c92-ecec547e313e",
          "title": "12 - Crie uma função para gerar as cores aleatoriamente ao carregar a página, com exceção da cor preta",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Crie uma função para gerar as cores aleatoriamente ao carregar a página, com exceção da cor preta Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 459,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:56751/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:56751/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:56751/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:56751/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:56751/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:56751/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:56751/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:56751/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:56751/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:56751/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:56751/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:56751/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:56751/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:56751/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "a05f699c-2f4a-45ff-af15-1abcac850a31",
              "parentUUID": "2ff1cfa0-19e2-4f99-8c92-ecec547e313e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Crie uma função para gerar as cores aleatoriamente ao carregar a página, com exceção da cor preta Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 415,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:56751/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:56751/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:56751/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:56751/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:56751/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:56751/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:56751/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:56751/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:56751/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:56751/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:56751/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:56751/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:56751/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:56751/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "2edc2acb-17fc-4998-ab05-75cc80de16da",
              "parentUUID": "2ff1cfa0-19e2-4f99-8c92-ecec547e313e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a05f699c-2f4a-45ff-af15-1abcac850a31",
            "2edc2acb-17fc-4998-ab05-75cc80de16da"
          ],
          "pending": [],
          "skipped": [],
          "duration": 874,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}